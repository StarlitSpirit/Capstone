%question 1
idata=readtable('hw2dataproblem1.txt')
%% 

idata=table2array(idata)
%importing the data
%% 

xdata=idata(:,1)
yavgs=[]
stdevs=[]
uncert=[]
for x=1:15 
    fillarray=idata(x,2:end)
    avg=mean(fillarray)
    stdev=std(fillarray)
    uncertainty=stdev/15
    yavgs=[yavgs;avg]
    stdevs=[stdevs;stdev]
    uncert=[uncert;uncertainty]
end
%% 

%% 
[fitresult, gof] = createFit(xdata, yavgs)
%I used the curve fitting tool in matlab to help me generate a power fit. I
%know I am supposed to use chi squared for this but I was stumped because
%how do I calculate it (i need to know the residuals and standard
%deviations) and I wanted to at least do the least squares part of the
%assignment.
%fit results are a=12.96 and b=1.614 where y=ax^b
%the function generated can be seen at the bottom of this file. 
%% 

%below is ordinairy least squares
linearizey=log(yavgs)
linearizex=log(xdata)
vandermonde=[ones(15,1),linearizex]
x=lsqr(linearizex,linearizey)

%% 
%below is weighted least squares
newx=xdata./stdev
newy=yavgs./stdev
vandermonde=[ones(15,1),newx]
xtwo=lsqr(newx,newy)

%% 
figure
y1=[]
y2=[]
y3=[]
for x=1:15
    
y1new=12.96*xdata(x)^1.64
y2new=1.3265*xdata(x)
y3new=16.8864*xdata(x)

y1=[y1;y1new]
y2=[y2;y2new]
y3=[y3;y3new]
end

plot(xdata,y1,xdata,y2,xdata,y3)

% you should use weighted least squares when the quality of your data is
% questionable or when the errors are really varried across the dataset
%%
%problem 2


%% 

function [fitresult, gof] = createFit(xdata, yavgs)
%CREATEFIT(XDATA,YAVGS)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input: xdata
%      Y Output: yavgs
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 03-Mar-2023 16:03:57


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( xdata, yavgs );

% Set up fittype and options.
ft = fittype( 'power1' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [13.7368951552201 1.04745785655307];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'yavgs vs. xdata', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xdata', 'Interpreter', 'none' );
ylabel( 'yavgs', 'Interpreter', 'none' );
grid on
end



